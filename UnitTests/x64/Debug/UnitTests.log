  UnitTests.cpp
E:\Programming\OpenGL\ObjForGL\ObjForGL\objForGL.hpp(87,46): warning C4267: 'return': conversion from 'size_t' to 'const int', possible loss of data
  (compiling source file '/UnitTests.cpp')
  
E:\Programming\OpenGL\ObjForGL\ObjForGL\objForGL.hpp(88,50): warning C4267: 'return': conversion from 'size_t' to 'const int', possible loss of data
  (compiling source file '/UnitTests.cpp')
  
E:\Programming\OpenGL\ObjForGL\ObjForGL\objForGL.hpp(138,39): warning C4267: 'argument': conversion from 'size_t' to 'const int', possible loss of data
  (compiling source file '/UnitTests.cpp')
  
E:\Programming\OpenGL\ObjForGL\ObjForGL\objForGL.hpp(156,18): warning C4838: conversion from 'int' to 'const unsigned int' requires a narrowing conversion
  (compiling source file '/UnitTests.cpp')
  
E:\Programming\OpenGL\ObjForGL\ObjForGL\objForGL.hpp(157,25): warning C4838: conversion from 'int' to 'const unsigned int' requires a narrowing conversion
  (compiling source file '/UnitTests.cpp')
  
E:\Programming\OpenGL\ObjForGL\ObjForGL\objForGL.hpp(158,26): warning C4838: conversion from 'int' to 'const unsigned int' requires a narrowing conversion
  (compiling source file '/UnitTests.cpp')
  
E:\Programming\OpenGL\ObjForGL\ObjForGL\objForGL.hpp(171,22): warning C4018: '<': signed/unsigned mismatch
  (compiling source file '/UnitTests.cpp')
  
E:\Programming\OpenGL\ObjForGL\ObjForGL\objForGL.hpp(181,47): warning C4267: 'return': conversion from 'size_t' to 'const int', possible loss of data
  (compiling source file '/UnitTests.cpp')
  
E:\Programming\OpenGL\ObjForGL\ObjForGL\objForGL.hpp(182,47): warning C4267: 'return': conversion from 'size_t' to 'const int', possible loss of data
  (compiling source file '/UnitTests.cpp')
  
E:\Programming\OpenGL\ObjForGL\ObjForGL\objForGL.hpp(183,46): warning C4267: 'return': conversion from 'size_t' to 'const int', possible loss of data
  (compiling source file '/UnitTests.cpp')
  
E:\Programming\OpenGL\ObjForGL\ObjForGL\objForGL.hpp(184,49): warning C4267: 'return': conversion from 'size_t' to 'const int', possible loss of data
  (compiling source file '/UnitTests.cpp')
  
E:\Programming\OpenGL\ObjForGL\ObjForGL\objLoader.hpp(70,3): warning C4002: too many arguments for function-like macro invocation 'assert'
  (compiling source file '/UnitTests.cpp')
  
E:\Programming\OpenGL\ObjForGL\ObjForGL\objLoader.hpp(69,21): warning C4267: 'initializing': conversion from 'size_t' to 'int', possible loss of data
  (compiling source file '/UnitTests.cpp')
  
E:\Programming\OpenGL\ObjForGL\ObjForGL\objLoader.hpp(115,47): warning C4244: 'argument': conversion from 'double' to 'float', possible loss of data
  (compiling source file '/UnitTests.cpp')
  
E:\Programming\OpenGL\ObjForGL\ObjForGL\objLoader.hpp(115,44): warning C4244: 'argument': conversion from 'double' to 'float', possible loss of data
  (compiling source file '/UnitTests.cpp')
  
E:\Programming\OpenGL\ObjForGL\ObjForGL\objLoader.hpp(115,41): warning C4244: 'argument': conversion from 'double' to 'float', possible loss of data
  (compiling source file '/UnitTests.cpp')
  
E:\Programming\OpenGL\ObjForGL\ObjForGL\objLoader.hpp(118,49): warning C4244: 'argument': conversion from 'double' to 'float', possible loss of data
  (compiling source file '/UnitTests.cpp')
  
E:\Programming\OpenGL\ObjForGL\ObjForGL\objLoader.hpp(118,46): warning C4244: 'argument': conversion from 'double' to 'float', possible loss of data
  (compiling source file '/UnitTests.cpp')
  
E:\Programming\OpenGL\ObjForGL\ObjForGL\objLoader.hpp(118,43): warning C4244: 'argument': conversion from 'double' to 'float', possible loss of data
  (compiling source file '/UnitTests.cpp')
  
E:\Programming\OpenGL\ObjForGL\ObjForGL\objLoader.hpp(121,46): warning C4244: 'argument': conversion from 'double' to 'float', possible loss of data
  (compiling source file '/UnitTests.cpp')
  
E:\Programming\OpenGL\ObjForGL\ObjForGL\objLoader.hpp(121,43): warning C4244: 'argument': conversion from 'double' to 'float', possible loss of data
  (compiling source file '/UnitTests.cpp')
  
E:\Programming\OpenGL\ObjForGL\ObjForGL\objLoader.hpp(121,40): warning C4244: 'argument': conversion from 'double' to 'float', possible loss of data
  (compiling source file '/UnitTests.cpp')
  
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.41.34120\include\utility(247,54): warning C4267: 'initializing': conversion from 'size_t' to '_Ty2', possible loss of data
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.41.34120\include\utility(247,54): warning C4267:         with
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.41.34120\include\utility(247,54): warning C4267:         [
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.41.34120\include\utility(247,54): warning C4267:             _Ty2=int
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.41.34120\include\utility(247,54): warning C4267:         ]
  (compiling source file '/UnitTests.cpp')
      C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.41.34120\include\utility(247,54):
      the template instantiation context (the oldest one first) is
          E:\Programming\OpenGL\ObjForGL\ObjForGL\objForGL.hpp(132,15):
          see reference to function template instantiation 'std::pair<std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>,bool> std::_Hash<std::_Umap_traits<_Kty,int,std::_Uhash_compare<_Kty,_Hasher,_Keyeq>,_Alloc,false>>::emplace<const rc::pointIndeces&,size_t&>(const rc::pointIndeces &,size_t &)' being compiled
          with
          [
              _Ty=std::pair<const rc::pointIndeces,int>,
              _Kty=rc::pointIndeces,
              _Hasher=std::hash<rc::pointIndeces>,
              _Keyeq=std::equal_to<rc::pointIndeces>,
              _Alloc=std::allocator<std::pair<const rc::pointIndeces,int>>
          ]
              E:\Programming\OpenGL\ObjForGL\ObjForGL\objForGL.hpp(131,76):
              see the first reference to 'std::_Hash<std::_Umap_traits<_Kty,_Ty,std::_Uhash_compare<_Kty,_Hasher,_Keyeq>,_Alloc,false>>::emplace' in 'rc::GLMesh::_add_vtn_values_or_index'
          with
          [
              _Kty=rc::pointIndeces,
              _Ty=int,
              _Hasher=std::hash<rc::pointIndeces>,
              _Keyeq=std::equal_to<rc::pointIndeces>,
              _Alloc=std::allocator<std::pair<const rc::pointIndeces,int>>
          ]
          C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.41.34120\include\xhash(610,53):
          see reference to function template instantiation 'std::_List_node_emplace_op2<std::allocator<std::_List_node<std::pair<const rc::pointIndeces,int>,std::_Default_allocator_traits<_Alloc>::void_pointer>>>::_List_node_emplace_op2<const rc::pointIndeces&,size_t&>(_Alnode &,const rc::pointIndeces &,size_t &)' being compiled
          with
          [
              _Alloc=std::allocator<std::pair<const rc::pointIndeces,int>>,
              _Alnode=std::allocator<std::_List_node<std::pair<const rc::pointIndeces,int>,std::_Default_allocator_traits<std::allocator<std::pair<const rc::pointIndeces,int>>>::void_pointer>>
          ]
          C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.41.34120\include\list(585,25):
          see reference to function template instantiation 'void std::_Default_allocator_traits<_Alloc>::construct<_Ty,const rc::pointIndeces&,size_t&>(_Alloc &,_Objty *const ,const rc::pointIndeces &,size_t &)' being compiled
          with
          [
              _Alloc=std::allocator<std::_List_node<std::pair<const rc::pointIndeces,int>,std::_Default_allocator_traits<std::allocator<std::pair<const rc::pointIndeces,int>>>::void_pointer>>,
              _Ty=std::pair<const rc::pointIndeces,int>,
              _Objty=std::pair<const rc::pointIndeces,int>
          ]
          C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.41.34120\include\xmemory(698,14):
          see reference to function template instantiation '_Ty *std::construct_at<_Objty,const rc::pointIndeces&,size_t&>(_Ty *const ,const rc::pointIndeces &,size_t &) noexcept' being compiled
          with
          [
              _Ty=std::pair<const rc::pointIndeces,int>,
              _Objty=std::pair<const rc::pointIndeces,int>
          ]
          C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.41.34120\include\xutility(390,69):
          see reference to function template instantiation 'std::pair<const rc::pointIndeces,int>::pair<const rc::pointIndeces&,size_t&,0>(_Other1,_Other2) noexcept' being compiled
          with
          [
              _Other1=const rc::pointIndeces &,
              _Other2=size_t &
          ]
  
  UnitTests.vcxproj -> E:\Programming\OpenGL\ObjForGL\x64\Debug\UnitTests.dll
